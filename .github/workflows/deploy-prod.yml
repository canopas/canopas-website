name: DeployProd
on:
  push:
    branches:
      - "master"
      
jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - uses: actions/setup-node@v1
        with:
          node-version: "18"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-frontend-access
          aws-region: ap-south-1

      - name: Build nginx and push on ECR
        run: |
          cd nginx 
          sed -i.bak -e '10,15d' conf.d/default.conf && rm conf.d/default.conf.bak
          sed -i "s|WEBSITE_URL|canopas.com|g" conf.d/default.conf
          sed -i "s|API_URL|prod-stack-api.canopas.com|g" conf.d/default.conf
          bash ./../deploy/deploy-ecr-image.sh prod-nginx ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/canopas-website-nginx

      - name: Build frontend and push on ECR
        run: |
          cd vue-frontend
          echo VITE_RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }} >> .env
          mv src/config.prod.js src/config.js
          sh ./../deploy/generate-sitemap.sh https://canopas.com https://prod-stack-api.canopas.com
          bash ./../deploy/deploy-ecr-image.sh prod-frontend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/canopas-website-frontend
  
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.17.5"

      - name: Build backend and push on ECR
        run: |
          bash ./deploy/deploy-ecr-image.sh prod-backend ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/canopas-website-backend

      - name: Deploy cloudformation stack
        id: canopas-website-prod-ECS-EC2-stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: canopas-website-prod-ECS-EC2-stack
          template: infrastructure/template.yml
          capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
          timeout-in-minutes: "10"
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            EnvName=prod,
            Sender=${{ secrets.SENDER }},
            JobsReceiver=${{ secrets.JOBS_RECEIVER }},
            ContactReceiver=${{ secrets.CONTACT_RECEIVER }},
            AccessKeyId=${{ secrets.ACCESS_KEY_ID }},
            SecretAccessKey=${{ secrets.SECRET_ACCESS_KEY }},
            Region=${{ secrets.AWS_REGION }},
            DbUsername=${{ secrets.DB_USERNAME }},
            DbPassword=${{ secrets.DB_PASSWORD }},
            DbHost=${{ secrets.DB_HOST }},
            DbPort=${{ secrets.DB_PORT }},
            DbName=${{ secrets.DB_NAME }},
            RecaptchaConfigJSONBase64=${{ secrets.RECAPTCHA_CONFIG_JSON_BASE64 }},
            RecaptchaSiteKey=${{ secrets.RECAPTCHA_SITE_KEY }},
            RecaptchaProjectId=${{ secrets.RECAPTCHA_PROJECT_ID }},
            JobsSpreadsheetId=${{ secrets.JOBS_SPREADSHEET_ID }},
            JobsSheetId=${{ secrets.JOBS_SHEET_ID }},
            ClusterName=canopas-website-prod,
            ImageTag=${{ github.sha }}-${{ github.run_attempt }}-prod-frontend,
            BackendImageTag=${{ github.sha }}-${{ github.run_attempt }}-prod-backend,
            NginxImageTag=${{ github.sha }}-${{ github.run_attempt }}-prod-nginx