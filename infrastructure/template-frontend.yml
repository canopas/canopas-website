AWSTemplateFormatVersion: 2010-09-09
Description: An ECS, ECR, ALB and cloudfront stack

Parameters:
  ClusterName:
    Type: String
    Description: Name of ECS cluster
  LoadBalancerName:
    Type: String
    Description: Name of application load balancer
  TargetGroupName:
    Type: String
    Description: Name of target group
  SecurityGroupName:
    Type: String
    Description: Name of security group
  SecurityGroupContainerName:
    Type: String
    Description: Name of security group container
  ImageTag:
    Type: String
    Description: Docker image tag

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      Cpu: 256
      Memory: 512
      NetworkMode: "awsvpc"
      ContainerDefinitions:
        - Name: "canopas-website-ssr-app"
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/canopas-website-ssr-app:${ImageTag}
          MemoryReservation: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 3080
              Protocol: tcp

  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Ref ClusterName

  FargateAlb:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Ref LoadBalancerName
      Subnets:
        - subnet-747c1b38
        - subnet-3cc36a47
        - subnet-a8b086c0
      Type: application
      SecurityGroups:
        - !GetAtt FargateAlbSG.GroupId

  FargateTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Name: !Ref TargetGroupName
      VpcId: vpc-61878e09
      Protocol: HTTP
      Port: 3080
      HealthCheckPath: /actuator/
      TargetType: ip

  HTTPListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - 
          Order: 1
          RedirectConfig: 
            Protocol: "HTTPS"
            Port: "443"
            StatusCode: "HTTP_301"
          Type: "redirect"
      LoadBalancerArn: !Ref FargateAlb
      Port: 80
      Protocol: HTTP
  
  HTTPSListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref FargateAlb
      Port: 443
      Protocol: "HTTPS"
      SslPolicy: "ELBSecurityPolicy-TLS-1-2-Ext-2018-06"
      Certificates: 
        - CertificateArn: !Sub arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/dd01d7f9-c579-42f5-a4ba-f53347005456
      DefaultActions: 
        - 
          Order: 1
          TargetGroupArn: !Ref FargateTargetGroup
          Type: "forward"

  FargateAlbSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: SG for the Fargate ALB
      GroupName: !Ref SecurityGroupName
      SecurityGroupIngress:
        - CidrIpv6: ::/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: "Inbound rule for IPv6 traffic"
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: TCP
          Description: "Inbound rule for IPv4 traffic"
        - CidrIpv6: ::/0
          FromPort: 443
          ToPort: 443
          IpProtocol: TCP
          Description: "Inbound rule for IPv6 traffic"
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: TCP
          Description: "Inbound rule for IPv4 traffic"

  Alb2FargateContainers:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: SG for traffic between ALB and containers
      GroupName: !Ref SecurityGroupContainerName
      SecurityGroupIngress:
        - IpProtocol: -1
          SourceSecurityGroupId: !GetAtt FargateAlbSG.GroupId
          Description: "Inbound rule for all traffic"

  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - HTTPListener
      - HTTPSListener
    Properties:
      LaunchType: FARGATE
      Cluster:
        Ref: "ECSCluster"
      DesiredCount: 1
      TaskDefinition:
        Ref: "TaskDefinition"
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !GetAtt Alb2FargateContainers.GroupId
          Subnets: ["subnet-747c1b38", "subnet-3cc36a47", "subnet-a8b086c0"]
      LoadBalancers:
        - TargetGroupArn:
            Ref: FargateTargetGroup
          ContainerPort: 3080
          ContainerName: canopas-website-ssr-app