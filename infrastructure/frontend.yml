AWSTemplateFormatVersion: 2010-09-09
Description: An ECS with launchType EC2 frontend stack

Parameters:
  EnvName:
    Type: String
    Description: Name of an environment. 'dev', 'staging', 'prod' and any name.
    AllowedPattern: ^.*[^0-9]$
    ConstraintDescription: Must end with non-numeric character.
  ClusterName:
    Type: String
    Description: Name of ECS cluster
  ImageTag:
    Type: String
    Description: Website Docker frontend image tag
  NginxImageTag:
    Type: String
    Description: NGINX Docker image tag

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family:
        Fn::Sub: canopas-website-${EnvName}-full-stack-task-definition
      ExecutionRoleArn:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      NetworkMode: "bridge"
      ContainerDefinitions:
        - Name: "canopas-website-nginx"
          Hostname: "canopas-website-nginx"
          Memory: 128
          Cpu: 128
          Essential: true
          Image:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/canopas-website-nginx:${NginxImageTag}
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Links:
            - canopas-website-frontend

        - Name: "canopas-website-frontend"
          Memory: 512
          Cpu: 512
          Essential: true
          Image:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/canopas-website-frontend:${ImageTag}
          PortMappings:
            - ContainerPort: 3080
              HostPort: 3080
              Protocol: tcp

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: "canopas-website-full-stack"
      LaunchType: EC2
      Cluster:
        Fn::Sub: ${ClusterName}
      DesiredCount: 1
      TaskDefinition:
        Ref: "TaskDefinition"
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 0
